---
Checks: >-
  -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters,
  -bugprone-suspicious-include,
  -bugprone-unchecked-optional-access,
  bugprone-*,
  cert-*,
  clang-analyzer-*,
  concurrency-*,
  misc-*,
  performance-*,
  portability-*,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-goto,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-c-copy-assignment-signature,
  -cppcoreguidelines-explicit-virtual-functions,
  -cppcoreguidelines-init-variables,
  -cppcoreguidelines-interfaces-global-init,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-narrowing-conversions,
  -cppcoreguidelines-no-malloc,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-owning-memory,
  -cppcoreguidelines-prefer-member-initializer,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-const-cast,
  -cppcoreguidelines-pro-type-cstyle-cast,
  -cppcoreguidelines-pro-type-member-init,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-static-cast-downcast,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-slicing,
  -cppcoreguidelines-special-member-functions,
  -cppcoreguidelines-virtual-class-destructor,
  -hicpp-avoid-c-arrays,
  -hicpp-avoid-goto,
  -hicpp-braces-around-statements,
  -hicpp-deprecated-headers,
  -hicpp-exception-baseclass,
  -hicpp-explicit-conversions,
  -hicpp-function-size,
  -hicpp-invalid-access-moved,
  -hicpp-member-init,
  -hicpp-move-const-arg,
  -hicpp-multiway-paths-covered,
  -hicpp-named-parameter,
  -hicpp-new-delete-operators,
  -hicpp-no-array-decay,
  -hicpp-no-assembler,
  -hicpp-no-malloc,
  -hicpp-noexcept-move,
  -hicpp-signed-bitwise,
  -hicpp-special-member-functions,
  -hicpp-static-assert,
  -hicpp-undelegated-constructor,
  -hicpp-uppercase-literal-suffix,
  -hicpp-use-auto,
  -hicpp-use-emplace,
  -hicpp-use-equals-default,
  -hicpp-use-equals-delete,
  -hicpp-use-noexcept,
  -hicpp-use-nullptr,
  -hicpp-use-override,
  modernize-*,
  -modernize-avoid-bind,
  -modernize-avoid-c-arrays,
  -modernize-return-braced-init-list,
  -modernize-use-bool-literals,
  -modernize-use-nullptr,
  -modernize-use-trailing-return-type,
  readability-non-const-parameter,
  readability-redundant-*
  -readability-redundant-access-specifiers,
WarningsAsErrors: >-
  clang-analyzer-*,
  clang-diagnostic-*,
  performance-*,
  -performance-no-int-to-ptr,
  readability-identifier-naming
UseColor: true
HeaderFilterRegex: '^src/(terminal.*)/.*\.(h|cpp)$'
AnalyzeTemporaryDtors: false
FormatStyle:     none
CheckOptions:
  - key:             bugprone-easily-swappable-parameters.MinimumLength
    value:           '3'
  - key:             cert-dcl16-c.NewSuffixes
    value:           'L;LL;LU;LLU'
  - key:             cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
    value:           '0'
  - key:             cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors
    value:           '1'
  - key:             cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value:           '1'
  - key:             google-readability-braces-around-statements.ShortStatementLines
    value:           '1'
  - key:             google-readability-function-size.StatementThreshold
    value:           '800'
  - key:             google-readability-namespace-comments.ShortNamespaceLines
    value:           '10'
  - key:             google-readability-namespace-comments.SpacesBeforeComments
    value:           '2'
  - key:             modernize-loop-convert.MaxCopySize
    value:           '16'
  - key:             modernize-loop-convert.MinConfidence
    value:           reasonable
  - key:             modernize-loop-convert.NamingStyle
    value:           CamelCase
  - key:             modernize-pass-by-value.IncludeStyle
    value:           llvm
  - key:             modernize-replace-auto-ptr.IncludeStyle
    value:           llvm
  - key:             modernize-use-nullptr.NullMacros
    value:           'NULL'
  - key:             modernize-use-default-member-init.UseAssignment
    value:           '1'

    
  # -cppcoreguidelines-avoid-c-arrays,
  # -cppcoreguidelines-macro-usage,
  # -cppcoreguidelines-no-malloc,
  # -cppcoreguidelines-non-private-member-variables-in-classes,
  # -cppcoreguidelines-pro-bounds-constant-array-index,
  # -cppcoreguidelines-owning-memory,
  # -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  # -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  # -cppcoreguidelines-pro-type-const-cast,
  # -cppcoreguidelines-pro-type-cstyle-cast,
  # -cppcoreguidelines-pro-type-static-cast-downcast,
  # -cppcoreguidelines-pro-type-vararg,
  # -cppcoreguidelines-special-member-functions,
    
  # - key:   readability-identifier-naming.EnumCase
  #   value: CamelCase
  # - key:   readability-identifier-naming.ClassCase
  #   value: CamelCase
  # - key:   readability-identifier-naming.ClassMemberCase
  #   value: camelBack
  # - key:   readability-identifier-naming.ClassMethodCase
  #   value: camelBack
  # - key:   readability-identifier-naming.ParameterCase
  #   value: camelBack
  # - key:   readability-identifier-naming.ParameterPrefix
  #   value: ''
  # - key:   readability-identifier-naming.ScopedEnumConstantCase
  #   value: CamelCase






# Checks: >
#   -*,
#   bugprone-*,
#   cert-*,
#   clang-analyzer-*,
#   concurrency-*,
#   misc-*,
#   performance-*,
#   portability-*,
#   readability-*,
#   -header-filter=*
#   -abseil-*,
#   -altera-*,
#   -android-*,
#   -fuchsia-*,
#   -google-*,
#   -llvm*,
#   -cppcoreguidelines-*,
#   -misc-*,
#   -modernize-*,
#   -bugprone-easily-swappable-parameters,
#   -bugprone-macro-parentheses,
#   -bugprone-reserved-identifier,-cert-dcl37-c,-cert-dcl51-cpp,
#   -cert-dcl21-cpp,
#   -misc-non-private-member-variables-in-classes,
#   -performance-noexcept-move-constructor,
#   -performance-no-int-to-ptr,
#   -readability-braces-around-statements,
#   -readability-identifier-length,
#   -readability-magic-numbers,
#   -readability-named-parameter,
#   -readability-uppercase-literal-suffix,
#   -readability-use-anyofallof,
# WarningsAsErrors: ''
# FormatStyle: none
# CheckOptions:
#   - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
#     value: true
#   - key: readability-implicit-bool-conversion.AllowPointerConditions
#     value: true
#   - key: readability-function-cognitive-complexity.Threshold
#     value: 100 # FIXME: Lower this (30? 50?), and refactor complex functions

# Checks: "*,
#         -abseil-*,
#         -altera-*,
#         -android-*,
#         -fuchsia-*,
#         -google-*,
#         -llvm*,
#         -modernize-use-trailing-return-type,
#         -zircon-*,
#         -readability-else-after-return,
#         -readability-static-accessed-through-instance,
#         -readability-avoid-const-params-in-decls,
#         -cppcoreguidelines-non-private-member-variables-in-classes,
#         -misc-non-private-member-variables-in-classes,
# "
# WarningsAsErrors: ''
# HeaderFilterRegex: ''
# FormatStyle:     none
